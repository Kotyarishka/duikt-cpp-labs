#include <iostream>

// Завдання 1.
// Оголошено одновимірний масив (vector) (наведено у зразку). Необхідно знайти найменший елемент масиву не
// використовуючи індексацію. Можна використовувати скільки завгодно вказівників.
void problem1() {
    int vector[] = {3, -5, 7, 10, -4, 14, 5, 2, -13};

    int n = sizeof(vector) / sizeof(vector[0]);

    int *ptr = vector;
    int min = *ptr;

    for (int i = 0; i < n; i++) {
        if (*ptr < min) {
            min = *ptr;
        }
        ptr++;
    }

    std::cout << "Min element: " << min << std::endl;
}

// Завдання 2.
// Оголошено двовимірний масив (matrix) (наведено у зразку). Масив виводить матрицю, розмірністю 10 на 10, що заповнена
// за замовчуванням нулями. Необхідно заповнити масив значеннями, які перетворять її в таблицю множення
// (приклад виведення наведено в зразку). Для цього ми не можемо використовувати індексацію. Дозволено використання лише вказівників

void problem2() {
    int matrix[10][10] = {0};

    int *ptr = &matrix[0][0];

    for (int i = 1; i <= 10; ++i) {
        for (int j = 1; j <= 10; ++j) {
            *ptr = i * j;
            ++ptr;
        }
    }

    for (int i = 0; i < 10; i++) {
        for (int j = 0; j < 10; j++) {
            std::cout << matrix[i][j] << "\t";
        }
        std::cout << std::endl;
    }
}

int main() {
    problem2();
    return 0;
}